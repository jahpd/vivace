// Generated by CoffeeScript 1.4.0
(function() {
  var confLastVoices, lastvoices, loadcode, run, voices;

  voices = window.Vivace.voices;

  lastvoices = window.Vivace.lastvoices;

  loadcode = function(filename, callback) {
    var request, url;
    request = new XMLHttpRequest();
    url = '../../codes/' + filename;
    request.open('GET', url, true);
    request.responseType = 'text';
    request.onload = function() {
      return callback(request.response);
    };
    request.onerror = function() {
      return console.log('error while loading audio file from ' + url);
    };
    return request.send();
  };

  confLastVoices = function(runvoice) {
    var activeVoices, currentVoices;
    currentVoices = runvoice.current;
    activeVoices = runvoice.active;
    Vivace.lastVoices = {};
    return $.each(activeVoices, function(i, voicename) {
      var id, voice;
      if (currentVoices[voicename].sigType === 'video') {
        $('video').css('zIndex', 0);
        currentVoice.popcorn.pause();
      }
      voice = Vivace.lastVoices[voicename] = {
        _name: voicename,
        id: Vivace.environment.indexOf(Vivace.voices[voicename]),
        durId: 0,
        posId: 0,
        gdurId: 0,
        dur: currentVoices[voicename].dur,
        pos: currentVoices[voicename].pos,
        gdur: currentVoices[voicename].gdur,
        isAvailable: currentVoices[voicename].isAvailable
      };
      id = voice.durId >= voice.dur.length ? voice.durId % voice.dur.length : voice.durId;
      Vivace.events.push({
        '_name': voicename,
        'id': Vivace.environment.indexOf(Vivace.environment[voice._name]),
        'currentbeat': voice.dur[id].val,
        'nextbeat': voice.dur[id].val * Vivace.semiBreve + Vivace.beats
      });
      return Vivace.voices.enable(voicename);
    });
  };

  run = function() {
    return loadcode('default.vivace', function(code) {
      $('textarea').text(code);
      return Vivace.exec('vivace_lang', code, function(exec_voices) {
        confLastVoices(exec_voices);
        console.log("text coded objects:");
        console.log(exec_voices);
        return window.Vivace.isRunning = true;
      });
    });
  };

  window.Vivace.run = run;

}).call(this);
